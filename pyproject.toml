[tool.poetry]
name = "stalactite"
version = "0.1.0"
description = "\"A Framework for Vertical Federated Learning\""
authors = ["fonhorst <fonhorst@alipoov.nb@gmail.com>"]
readme = "README.md"
packages = [
    { include = "stalactite" }
]

[tool.poetry.dependencies]
python = "^3.9,<3.13"
pytest = "^7.4.3"
click = "^8.1.7"
numpy = "^1.24"
scikit-learn = "^1.3.2"
mlflow = "^2.11.3"
jupyter = "^1.0.0"
datasets = "^2.15.0"
pyyaml = "^6.0.1"
grpcio = "^1.59.3"
safetensors = "^0.4.0"
prometheus-client = "^0.19.0"
docker = "6.1.3" #
pydantic = "^2.5.3"
torchsummary = "^1.5.1"
idna = "^3.7"
sqlparse = "^0.5.0"
tqdm = "^4.66.3"
werkzeug = "^3.0.3"
requests = "2.31.0"
jinja2 = "^3.1.4"
aiohttp = "^3.9.4"
jupyter-server = "^2.14.1"
tornado = "^6.4.1"
pillow = "^10.3.0"


[tool.poetry.group.dev.dependencies]
grpcio-tools = "^1.59.3"
tox = "^4.12.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-docker = "^2.0.1"
pytest-timeout = "^2.2.0"
pytest-reportlog = "^0.4.0"

[tool.poetry.scripts]
stalactite = "stalactite.main:cli"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.isort]
profile = "black"
force_single_line = false
use_parentheses = true
force_grid_wrap = 0
multi_line_output = 3
include_trailing_comma = true
extend_skip_glob = ["*/generated_code/*"]

[tool.pylint.format]
max-line-length = "120"
ignore = "E203,W0511"
ignore-paths = ["stalactite/communications/grpc_utils/generated_code/*"]


[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311']
exclude = '''
/(
  stalactite/communications/grpc_utils/generated_code/*
)/
'''

[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py{39,310,311}

    [gh-actions]
    python =
        3.9: py39
        3.10: py310
        3.11: py311

    [testenv]
    description = tests
    allowlist_externals = poetry,echo
    commands =
        echo "Running poetry installation"
        poetry install -vv
"""


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
